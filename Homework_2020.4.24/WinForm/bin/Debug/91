<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="最近在做服务的细粒度治理，统一管理所有服务的方法、参数、返回值信息。方便后续的各个模块之间的对接和协作。 目前系统中所有的服务，管理到接口契约粒度，即服务接口声明和服务接口实现。要做服务的细粒度治理：" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>巧用Mono.Cecil反射加载类型和方法信息 - Eric zhou - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/simpleblue/bundle-simpleblue.min.css?v=MH15aYd6DmX-6TABpA2xkiKENy3GAhiM2dh5rOPH89I" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/simpleblue/bundle-simpleblue-mobile.min.css?v=X7swQJ1TyCJAf6FMVjDPbYhUAiMdNFddEy1-m0_TbFQ" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/tianqing/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/tianqing/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/tianqing/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=z6JkvKQ7L_bGD-nwJExYzsoFf5qnluqZJru6RsfoZuM"></script>
    <script>
        var currentBlogId = 27084;
        var currentBlogApp = 'tianqing';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'SimpleBlue';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    <div id="home">
    <div id="header">
        <div id="blogTitle">
            
<div class="title"><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/tianqing/">I love .net</a>
</div>
<div class="subtitle">

</div>

        </div>
        <div id="navigator">
            
<ul id="navList">
    <li id="nav_sitehome"><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
    <li id="nav_myhome">
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/tianqing/">
首页</a>
</li>
    <li id="nav_newpost">

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
    <li id="nav_contact">
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/Eric%20zhou">
联系</a></li>
    <li id="nav_rss">
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/tianqing/rss/">
订阅</a></li>
    <li id="nav_admin">
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>

            <div class="blogStats">
                
<span id="stats_post_count">随笔 - 
101&nbsp;</span>
<span id="stats_article_count">文章 - 
0&nbsp;</span>
<!-- <span id="stats-comment_count"></span> -->
<span id="stats_comment_count">评论 - 
400</span>
            </div>
        </div>
    </div>
    <div id="main">
        <div id="mainContent">
            <div class="forFlow">
                <div id="post_detail">
    <div id="topics">
        <div class="post">
            <h1 class="postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/tianqing/p/7610560.html">巧用Mono.Cecil反射加载类型和方法信息</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body ">
    <p>&nbsp;&nbsp;&nbsp; 最近在做服务的细粒度治理，统一管理所有服务的方法、参数、返回值信息。方便后续的各个模块之间的对接和协作。</p>
<p>&nbsp;&nbsp; 目前系统中所有的服务，管理到接口契约粒度，即服务接口声明和服务接口实现。要做服务的细粒度治理：</p>
<p>&nbsp;&nbsp; 首先需要<strong>将服务的各个方法信息全部反射出来</strong>，然后再统一管理。</p>
<p>&nbsp;&nbsp; 大致的思路是这样的：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 1. 下载所有最新的服务包（dll文件集合）</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 2. 获取所有的服务定义信息</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 3. 反射加载出每个服务详细的方法信息（方法名、参数、返回值等）</p>
<p><strong>一、下载所有最新的服务包</strong></p>
<p>&nbsp;&nbsp;&nbsp; 系统中几百个服务，几十个服务组，每个服务都对应一个服务包（dll文件集合），通过FTP将所有最新的服务包下载到本地，释放出来</p>
<p>每个服务包一个文件夹</p>
<p><strong>二、获取所有的服务定义信息</strong></p>
<p>&nbsp;&nbsp; 这个也很简单，从主数据库中获取最新的服务定义信息即可，放到本地内存的一个集合中</p>
<p><strong>三、反射加载出每个服务详细的方法信息（方法名、参数、返回值等）</strong></p>
<p>&nbsp;&nbsp;&nbsp;循环遍历每个服务，Reflect每个接口信息，那么问题来了？</p>
<p>&nbsp; 很多服务之间是有依赖的，所以有服务组的概念，反射加载时，必须指定：</p>
<div class="cnblogs_code">
<pre>AppDomain.CurrentDomain.AppendPrivatePath(servicePath);</pre>
</div>
<p>然后，反射加载各个接口和接口实现</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">1</span>  Assembly asm =<span style="color: #000000;"> Assembly.Load(metadata.Invoke.UserDefineAssemble);</span>
<span style="color: #008080;">2</span>  Type type = asm.GetType(metadata.Invoke.UserDefineClass, <span style="color: #0000ff;">true</span>, <span style="color: #0000ff;">true</span>);</pre>
</div>
<p>这样做，通过发现Assembly加载不起来，因为反射加载时，很多依赖的dll找不到，或者不是最新版本（服务有多版本设计）。</p>
<p>具体反射的dll加载顺序，请大家参考MSDN：</p>
<p>https://docs.microsoft.com/en-us/dotnet/framework/deployment/how-the-runtime-locates-assemblies</p>
<p>如何解决这个问题？其实很简单的一个需要，解析Dll中的 Method Table.</p>
<p>此时，想到了ILSpy，Reflector，这些组件实现了Dll的反射加载，找找看看相关的SDK。</p>
<p>找着找着发现了Mono.Cecil.</p>
<p>http://www.mono-project.com/docs/tools+libraries/libraries/Mono.Cecil/</p>
<p><strong>Cecil</strong> is a library written by Jb Evain to generate and inspect programs and libraries in the ECMA CIL format.</p>
<p>With Cecil, you can load<strong> existing managed assemblies</strong>, browse all the <strong>contained types</strong>, modify them on the fly and save back to the disk the modified assembly.</p>
<p>直接Nuget引用。</p>
<p>关键的几个dll：</p>
<p><img src="https://images2017.cnblogs.com/blog/23525/201709/23525-20170929124638825-1190589684.png" alt="" /></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span> Mono.Cecil;</pre>
</div>
<p>同时，为了方便加载dll和处理服务组的dll，将所有服务包的dll递归放到一个文件夹中，同名Dll以最新修改时间为准。<br />上述文件准备工作就绪后，可以编码了：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> HSF.Service.Govermance.SPI;
</span><span style="color: #008080;"> 2</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> Mono.Cecil;
</span><span style="color: #008080;"> 3</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> System;
</span><span style="color: #008080;"> 4</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Collections.Generic;
</span><span style="color: #008080;"> 5</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> System.IO;
</span><span style="color: #008080;"> 6</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Linq;
</span><span style="color: #008080;"> 7</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Text;
</span><span style="color: #008080;"> 8</span> <span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Threading.Tasks;
</span><span style="color: #008080;"> 9</span> 
<span style="color: #008080;">10</span> <span style="color: #0000ff;">namespace</span><span style="color: #000000;"> HSF.Service.Govermance.Service
</span><span style="color: #008080;">11</span> <span style="color: #000000;">{
</span><span style="color: #008080;">12</span>     <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
<span style="color: #008080;">13</span>     <span style="color: #808080;">///</span><span style="color: #008000;"> 反射加载工具类
</span><span style="color: #008080;">14</span>     <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
<span style="color: #008080;">15</span>     <span style="color: #0000ff;">class</span><span style="color: #000000;"> ReflectionUtils
</span><span style="color: #008080;">16</span> <span style="color: #000000;">    {
</span><span style="color: #008080;">17</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> List&lt;HSFServiceMethod&gt; GetMethods(HSFServiceMetadataEntity metaData, <span style="color: #0000ff;">string</span><span style="color: #000000;"> path)
</span><span style="color: #008080;">18</span> <span style="color: #000000;">        {
</span><span style="color: #008080;">19</span>             <span style="color: #0000ff;">var</span> result = <span style="color: #0000ff;">new</span> List&lt;HSFServiceMethod&gt;<span style="color: #000000;">();
</span><span style="color: #008080;">20</span>             <span style="color: #0000ff;">var</span> file = Path.Combine(path, metaData.ServiceImplAssembly.Replace(<span style="color: #800000;">"</span> <span style="color: #800000;">"</span>, <span style="color: #800000;">""</span><span style="color: #000000;">));
</span><span style="color: #008080;">21</span>             <span style="color: #0000ff;">var</span> assembly =<span style="color: #000000;"> Mono.Cecil.AssemblyDefinition.ReadAssembly(file);
</span><span style="color: #008080;">22</span>             TypeDefinition type =<span style="color: #000000;"> assembly.MainModule.GetType(metaData.ServiceImplClass);
</span><span style="color: #008080;">23</span>             <span style="color: #0000ff;">var</span> methods =<span style="color: #000000;"> type.Methods;
</span><span style="color: #008080;">24</span>             <span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> method <span style="color: #0000ff;">in</span><span style="color: #000000;"> methods)
</span><span style="color: #008080;">25</span> <span style="color: #000000;">            {
</span><span style="color: #008080;">26</span>                 <span style="color: #0000ff;">var</span> hsfMethod = <span style="color: #0000ff;">new</span><span style="color: #000000;"> HSFServiceMethod();
</span><span style="color: #008080;">27</span>                 hsfMethod.ID =<span style="color: #000000;"> Guid.NewGuid().ToString();
</span><span style="color: #008080;">28</span>                 hsfMethod.ServiceID =<span style="color: #000000;"> metaData.ServiceID;
</span><span style="color: #008080;">29</span>                 hsfMethod.MethodName =<span style="color: #000000;"> method.Name;
</span><span style="color: #008080;">30</span>                 hsfMethod.ReturnType =<span style="color: #000000;"> method.ReturnType.FullName;
</span><span style="color: #008080;">31</span>                 hsfMethod.Parameters = <span style="color: #0000ff;">new</span> List&lt;HSFServiceParameter&gt;<span style="color: #000000;">();
</span><span style="color: #008080;">32</span>                 <span style="color: #0000ff;">var</span> methodName =<span style="color: #000000;"> method.Name;
</span><span style="color: #008080;">33</span>                 <span style="color: #0000ff;">if</span> (method.Parameters != <span style="color: #0000ff;">null</span> &amp;&amp; method.Parameters.Count &gt; <span style="color: #800080;">0</span><span style="color: #000000;">)
</span><span style="color: #008080;">34</span> <span style="color: #000000;">                {
</span><span style="color: #008080;">35</span>                     <span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">var</span> parameter <span style="color: #0000ff;">in</span><span style="color: #000000;"> method.Parameters)
</span><span style="color: #008080;">36</span> <span style="color: #000000;">                    {
</span><span style="color: #008080;">37</span>                         HSFServiceParameter para = <span style="color: #0000ff;">new</span><span style="color: #000000;"> HSFServiceParameter()
</span><span style="color: #008080;">38</span> <span style="color: #000000;">                        {
</span><span style="color: #008080;">39</span>                             ID =<span style="color: #000000;"> Guid.NewGuid().ToString(),
</span><span style="color: #008080;">40</span>                             MethodID =<span style="color: #000000;"> hsfMethod.ID,
</span><span style="color: #008080;">41</span>                             ServiceID =<span style="color: #000000;"> metaData.ServiceID,
</span><span style="color: #008080;">42</span>                             ParameterName =<span style="color: #000000;"> parameter.Name,
</span><span style="color: #008080;">43</span>                             ParameterOrder =<span style="color: #000000;"> parameter.Sequence,
</span><span style="color: #008080;">44</span>                             ParameterType =<span style="color: #000000;"> parameter.ParameterType.FullName,
</span><span style="color: #008080;">45</span> <span style="color: #000000;">                        };
</span><span style="color: #008080;">46</span> 
<span style="color: #008080;">47</span> <span style="color: #000000;">                        hsfMethod.Parameters.Add(para);
</span><span style="color: #008080;">48</span> <span style="color: #000000;">                    }
</span><span style="color: #008080;">49</span> <span style="color: #000000;">                }
</span><span style="color: #008080;">50</span> 
<span style="color: #008080;">51</span> <span style="color: #000000;">                result.Add(hsfMethod);
</span><span style="color: #008080;">52</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">53</span> 
<span style="color: #008080;">54</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> result;
</span><span style="color: #008080;">55</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">56</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">57</span> }</pre>
</div>
<p>所有的服务的方法、参数、返回值信息全部搞定。</p>
<p>周国庆</p>
<p>2017/9/29</p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2017-09-29 12:50</span>&nbsp;
<a href="https://www.cnblogs.com/tianqing/">Eric zhou</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=7610560" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(7610560);return false;">收藏</a></div>
        </div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 27084, cb_blogApp = 'tianqing', cb_blogUserGuid = 'ea753d0b-63cf-dd11-9e4d-001cf0cd104b';
    var cb_entryId = 7610560, cb_entryCreatedDate = '2017-09-29 12:50', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>    </div>
</div>
            </div>
        </div>

        <div id="sideBar">
            <div id="sideBarMain">
                
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

                <div id="calendar"><div id="blog-calendar" style="display:none"></div></div>                
                <script>loadBlogDefaultCalendar();</script>
                <div id="leftcontentcontainer">
                    <!-- begin:SingleColumn -->
                    <div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
                    <!-- end:  SingleColumn -->
                </div>
            </div>
        </div>
        <div class="clear"></div>
    </div>
    <div class="clear"></div>
    <div id="footer">
        <!--done-->
Copyright &copy; 2020 Eric zhou
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>

    </div>
</div>

    
</body>
</html>