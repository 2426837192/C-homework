<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="今天，同事发了个邮件说需要一个内部使用的GUID类，而不是System.Guid 结构体。什么意思呢？例如public void Test(string guidPara) 这个方法的参数是个stri" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>自定义GUID类 - Eric zhou - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/simpleblue/bundle-simpleblue.min.css?v=MH15aYd6DmX-6TABpA2xkiKENy3GAhiM2dh5rOPH89I" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/simpleblue/bundle-simpleblue-mobile.min.css?v=X7swQJ1TyCJAf6FMVjDPbYhUAiMdNFddEy1-m0_TbFQ" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/tianqing/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/tianqing/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/tianqing/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=z6JkvKQ7L_bGD-nwJExYzsoFf5qnluqZJru6RsfoZuM"></script>
    <script>
        var currentBlogId = 27084;
        var currentBlogApp = 'tianqing';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'SimpleBlue';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    <div id="home">
    <div id="header">
        <div id="blogTitle">
            
<div class="title"><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/tianqing/">I love .net</a>
</div>
<div class="subtitle">

</div>

        </div>
        <div id="navigator">
            
<ul id="navList">
    <li id="nav_sitehome"><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
    <li id="nav_myhome">
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/tianqing/">
首页</a>
</li>
    <li id="nav_newpost">

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
    <li id="nav_contact">
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/Eric%20zhou">
联系</a></li>
    <li id="nav_rss">
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/tianqing/rss/">
订阅</a></li>
    <li id="nav_admin">
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>

            <div class="blogStats">
                
<span id="stats_post_count">随笔 - 
101&nbsp;</span>
<span id="stats_article_count">文章 - 
0&nbsp;</span>
<!-- <span id="stats-comment_count"></span> -->
<span id="stats_comment_count">评论 - 
400</span>
            </div>
        </div>
    </div>
    <div id="main">
        <div id="mainContent">
            <div class="forFlow">
                <div id="post_detail">
    <div id="topics">
        <div class="post">
            <h1 class="postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/tianqing/p/3574191.html">自定义GUID类</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body ">
    <p>今天，同事发了个邮件说需要一个内部使用的GUID类，而不是System.Guid 结构体。什么意思呢？</p>
<p>例如public void Test(string guidPara) 这个方法的参数是个string类型，但是是通过参数名称告诉调用者是Guid类型的参数，因此，他需要的应该是:</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void Test(GUID para),&nbsp; 参数类型这么修改后，所有调用的地方需要统一改一遍，这不很恶。所以，实现了自定义的GUID类：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> GUID
</span><span style="color: #008080;"> 2</span> <span style="color: #000000;">    {
</span><span style="color: #008080;"> 3</span>         <span style="color: #0000ff;">#region</span> 构造函数
<span style="color: #008080;"> 4</span> 
<span style="color: #008080;"> 5</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
<span style="color: #008080;"> 6</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 构造函数
</span><span style="color: #008080;"> 7</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
<span style="color: #008080;"> 8</span>         <span style="color: #0000ff;">public</span><span style="color: #000000;"> GUID() { }
</span><span style="color: #008080;"> 9</span> 
<span style="color: #008080;">10</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
<span style="color: #008080;">11</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 构造函数
</span><span style="color: #008080;">12</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
<span style="color: #008080;">13</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="guid"&gt;</span><span style="color: #008000;">Guid</span><span style="color: #808080;">&lt;/param&gt;</span>
<span style="color: #008080;">14</span>         <span style="color: #0000ff;">public</span> GUID(<span style="color: #0000ff;">string</span><span style="color: #000000;"> guid)
</span><span style="color: #008080;">15</span> <span style="color: #000000;">        {
</span><span style="color: #008080;">16</span>             Value =<span style="color: #000000;"> guid;
</span><span style="color: #008080;">17</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">18</span> 
<span style="color: #008080;">19</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
<span style="color: #008080;">20</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 构造函数
</span><span style="color: #008080;">21</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
<span style="color: #008080;">22</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="guid"&gt;</span><span style="color: #008000;">Guid</span><span style="color: #808080;">&lt;/param&gt;</span>
<span style="color: #008080;">23</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span>
<span style="color: #008080;">24</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">implicit</span> <span style="color: #0000ff;">operator</span> GUID(<span style="color: #0000ff;">string</span><span style="color: #000000;"> guid)
</span><span style="color: #008080;">25</span> <span style="color: #000000;">        {
</span><span style="color: #008080;">26</span>             <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> GUID(guid);
</span><span style="color: #008080;">27</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">28</span> 
<span style="color: #008080;">29</span>         <span style="color: #0000ff;">#endregion</span>
<span style="color: #008080;">30</span> 
<span style="color: #008080;">31</span>         <span style="color: #0000ff;">#region</span> 属性
<span style="color: #008080;">32</span> 
<span style="color: #008080;">33</span>         <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> guidValue;
</span><span style="color: #008080;">34</span> 
<span style="color: #008080;">35</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
<span style="color: #008080;">36</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> Guid
</span><span style="color: #008080;">37</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
<span style="color: #008080;">38</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> Value
</span><span style="color: #008080;">39</span> <span style="color: #000000;">        {
</span><span style="color: #008080;">40</span>             <span style="color: #0000ff;">get</span>
<span style="color: #008080;">41</span> <span style="color: #000000;">            {
</span><span style="color: #008080;">42</span>                 <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">string</span><span style="color: #000000;">.IsNullOrWhiteSpace(guidValue))
</span><span style="color: #008080;">43</span>                     guidValue =<span style="color: #000000;"> Guid.NewGuid().ToString();
</span><span style="color: #008080;">44</span> 
<span style="color: #008080;">45</span>                 <span style="color: #0000ff;">return</span><span style="color: #000000;"> guidValue;
</span><span style="color: #008080;">46</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">47</span>             <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">set</span>
<span style="color: #008080;">48</span> <span style="color: #000000;">            {
</span><span style="color: #008080;">49</span>                 guidValue =<span style="color: #000000;"> value;
</span><span style="color: #008080;">50</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">51</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">52</span> 
<span style="color: #008080;">53</span>         <span style="color: #0000ff;">#endregion</span>
<span style="color: #008080;">54</span> 
<span style="color: #008080;">55</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
<span style="color: #008080;">56</span>         <span style="color: #808080;">///</span><span style="color: #008000;"> 重载ToString方法
</span><span style="color: #008080;">57</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
<span style="color: #008080;">58</span>         <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;</span><span style="color: #008000;">Value</span><span style="color: #808080;">&lt;/returns&gt;</span>
<span style="color: #008080;">59</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> ToString()
</span><span style="color: #008080;">60</span> <span style="color: #000000;">        {
</span><span style="color: #008080;">61</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> guidValue;
</span><span style="color: #008080;">62</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">63</span>     }</pre>
</div>
<p>单元测试下：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;"> 1</span> <span style="color: #000000;">[TestMethod]
</span><span style="color: #008080;"> 2</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> GUIDTest1()
</span><span style="color: #008080;"> 3</span> <span style="color: #000000;">        {
</span><span style="color: #008080;"> 4</span>             <span style="color: #0000ff;">var</span> guid = <span style="color: #0000ff;">new</span> GUID(<span style="color: #800000;">"</span><span style="color: #800000;">97b7e1ab-db31-4679-8a3c-59f0101c7497</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 5</span>             Assert.AreEqual(<span style="color: #800000;">"</span><span style="color: #800000;">97b7e1ab-db31-4679-8a3c-59f0101c7497</span><span style="color: #800000;">"</span><span style="color: #000000;">, guid.Value);
</span><span style="color: #008080;"> 6</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 7</span> 
<span style="color: #008080;"> 8</span> <span style="color: #000000;">        [TestMethod]
</span><span style="color: #008080;"> 9</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> GUIDTest2()
</span><span style="color: #008080;">10</span> <span style="color: #000000;">        {
</span><span style="color: #008080;">11</span>             GUID guid = <span style="color: #800000;">"</span><span style="color: #800000;">97b7e1ab-db31-4679-8a3c-59f0101c7497</span><span style="color: #800000;">"</span><span style="color: #000000;">;
</span><span style="color: #008080;">12</span>             Assert.AreEqual(<span style="color: #800000;">"</span><span style="color: #800000;">97b7e1ab-db31-4679-8a3c-59f0101c7497</span><span style="color: #800000;">"</span><span style="color: #000000;">, guid.Value);
</span><span style="color: #008080;">13</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">14</span> 
<span style="color: #008080;">15</span> <span style="color: #000000;">        [TestMethod]
</span><span style="color: #008080;">16</span>         <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> GUIDTest3()
</span><span style="color: #008080;">17</span> <span style="color: #000000;">        {
</span><span style="color: #008080;">18</span>             <span style="color: #0000ff;">var</span> guidValue = GetGuidValue(<span style="color: #800000;">"</span><span style="color: #800000;">97b7e1ab-db31-4679-8a3c-59f0101c7497</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #008080;">19</span>             Assert.AreEqual(<span style="color: #800000;">"</span><span style="color: #800000;">97b7e1ab-db31-4679-8a3c-59f0101c7497</span><span style="color: #800000;">"</span><span style="color: #000000;">, guidValue);
</span><span style="color: #008080;">20</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">21</span> 
<span style="color: #008080;">22</span>         <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> GetGuidValue(GUID guid)
</span><span style="color: #008080;">23</span> <span style="color: #000000;">        {
</span><span style="color: #008080;">24</span>             <span style="color: #0000ff;">return</span><span style="color: #000000;"> guid.Value;
</span><span style="color: #008080;">25</span>         }</pre>
</div>
<p>自然好了很多，已有程序不需要进行修改，GUID在整个运行时也进行了强类型处理，有以下几个特点：</p>
<p>1.GUID强类型</p>
<p>2.GUID实例缓存了Value成员，new 操作自动生成Guid。</p>
<p>3.string类型隐式转换</p>
<p>请大家看看需要其他的改进吗？</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2014-02-28 19:03</span>&nbsp;
<a href="https://www.cnblogs.com/tianqing/">Eric zhou</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=3574191" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(3574191);return false;">收藏</a></div>
        </div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 27084, cb_blogApp = 'tianqing', cb_blogUserGuid = 'ea753d0b-63cf-dd11-9e4d-001cf0cd104b';
    var cb_entryId = 3574191, cb_entryCreatedDate = '2014-02-28 19:03', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>    </div>
</div>
            </div>
        </div>

        <div id="sideBar">
            <div id="sideBarMain">
                
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

                <div id="calendar"><div id="blog-calendar" style="display:none"></div></div>                
                <script>loadBlogDefaultCalendar();</script>
                <div id="leftcontentcontainer">
                    <!-- begin:SingleColumn -->
                    <div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
                    <!-- end:  SingleColumn -->
                </div>
            </div>
        </div>
        <div class="clear"></div>
    </div>
    <div class="clear"></div>
    <div id="footer">
        <!--done-->
Copyright &copy; 2020 Eric zhou
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>

    </div>
</div>

    
</body>
</html>